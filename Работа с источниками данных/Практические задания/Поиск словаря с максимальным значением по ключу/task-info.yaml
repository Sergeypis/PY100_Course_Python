type: output
files:
  - name: main.py
    visible: true
    placeholders:
      - offset: 64
        length: 179
        placeholder_text: "...  # TODO считать содержимое JSON файла"
        initial_state:
          length: 41
          offset: 64
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          with open(FILENAME) as f:
                  json_data = json.load(f)
        selected: false
        status: Solved
        is_visible: false
      - offset: 248
        length: 48
        placeholder_text: "...  # TODO найти максимальный элемент по ключу score"
        initial_state:
          length: 53
          offset: 111
        initialized_from_dependency: false
        encrypted_possible_answer: "return max(json_data, key=lambda item: item[\"score\"\
      ])"
        selected: false
        status: Solved
        is_visible: false
    text: |
      import json
      
      
      FILENAME = "input.json"
      
      
      def task() -> dict:
          ...  # TODO считать содержимое JSON файла
      
          ...  # TODO найти максимальный элемент по ключу score
      
      
      if __name__ == '__main__':
          print(task())
    learner_created: false
  - name: __init__.py
    visible: false
    learner_created: false
  - name: tests/output.txt
    visible: false
    text: |
      {'score': 0.12801590412849398, 'id': 24472, 'density': 0.804765963835364, 'contains_improvement_appeals': 13}
    learner_created: false
  - name: input.json
    visible: true
    learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Sun, 14 Apr 2024 20:01:04 UTC"
record: -1
