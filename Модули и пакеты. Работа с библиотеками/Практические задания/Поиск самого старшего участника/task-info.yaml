type: output
files:
  - name: main.py
    visible: true
    placeholders:
      - offset: 0
        length: 228
        placeholder_text: '# TODO Напишите функцию get_oldest_participant'
        initial_state:
          length: 47
          offset: 0
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          def get_oldest_participant(participants):
              return max(participants, key=lambda item: item["age"])
        selected: false
        status: Solved
        is_visible: false
      - offset: 359
        length: 83
        placeholder_text: "...  # TODO Найдите самого старшего участника"
        initial_state:
          length: 83
          offset: 457
        initialized_from_dependency: false
        encrypted_possible_answer: get_oldest_participant(participants_list)
        selected: false
        status: Solved
        is_visible: false
    text: |
      # TODO Напишите функцию get_oldest_participant
      
      
      if __name__ == "__main__":
          participants_list = [
              {
                  "name": "Саша",
                  "age": 27,
              },
              {
                  "name": "Кирилл",
                  "age": 52,
              },
              {
                  "name": "Маша",
                  "age": 14,
              },
              {
                  "name": "Петя",
                  "age": 36,
              },
              {
                  "name": "Оля",
                  "age": 43,
              },
          ]
      
          oldest_participant = ...  # TODO Найдите самого старшего участника
          print(oldest_participant)
    learner_created: false
  - name: __init__.py
    visible: false
    learner_created: false
  - name: tests/output.txt
    visible: false
    text: |
      {'name': 'Кирилл', 'age': 52}
    learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: "Fri, 05 Apr 2024 20:34:52 UTC"
record: -1
